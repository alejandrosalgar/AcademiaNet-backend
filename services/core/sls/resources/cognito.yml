Resources:
  # Cognito resources
  MasterUserPoolAppKeys:
    Type: "AWS::Cognito::UserPool"
    Properties:
      UserPoolName: ${self:service}-${self:provider.stage}-MasterUserPool-appkeys

  MasterResourceServerAppKeys:
    Type: AWS::Cognito::UserPoolResourceServer
    Properties:
      Identifier: apiauthidentifier
      Name: ${self:service}-${self:provider.stage}-apiauthidentifier-appkeys
      Scopes:
        - ScopeName: "json.read"
          ScopeDescription: json read
      UserPoolId:
        Ref: MasterUserPoolAppKeys

  MasterUserPoolClientAppKeys:
    Type: AWS::Cognito::UserPoolClient
    DependsOn: MasterResourceServerAppKeys
    Properties:
      AllowedOAuthFlows:
        - client_credentials
      AllowedOAuthFlowsUserPoolClient: True
      AllowedOAuthScopes:
        - apiauthidentifier/json.read
      ClientName: ${self:service}-${self:provider.stage}-masteruserpoolclient-appkeys
      EnableTokenRevocation: True
      ExplicitAuthFlows:
        - ALLOW_CUSTOM_AUTH
        - ALLOW_USER_SRP_AUTH
        - ALLOW_REFRESH_TOKEN_AUTH
      GenerateSecret: True
      PreventUserExistenceErrors: ENABLED
      SupportedIdentityProviders:
        - COGNITO
      UserPoolId:
        Ref: MasterUserPoolAppKeys

  MasterDomainAppKeys:
    Type: AWS::Cognito::UserPoolDomain
    Properties:
      Domain: ${self:service}${self:provider.stage}appkeys
      UserPoolId:
        Ref: MasterUserPoolAppKeys

  MasterUserPoolneostella:
    Type: "AWS::Cognito::UserPool"
    Properties:
      AccountRecoverySetting:
        RecoveryMechanisms:
          - Name: verified_email
            Priority: 1
      AdminCreateUserConfig:
        AllowAdminCreateUserOnly: True
        InviteMessageTemplate:
          EmailMessage: Your username is {username} and temporary password is {####}
          EmailSubject: ${self:service} - neostella - Your temporary password
          SMSMessage: Your username is {username} and temporary password is {####}
      UsernameAttributes:
        - email
      UsernameConfiguration:
        CaseSensitive: True
      EmailConfiguration:
        EmailSendingAccount: DEVELOPER
        From: ${self:custom.common.environment.PROJECT} <${self:custom.common.environment.SES_EMAIL}>
        ReplyToEmailAddress: ${self:custom.common.environment.SES_EMAIL}
        SourceArn: arn:aws:ses:${self:provider.region}:${aws:accountId}:identity/${self:custom.common.environment.SES_DOMAIN}
      UserPoolName: ${self:service}-${self:provider.stage}-MasterUserPool-neostella
      Policies:
        PasswordPolicy:
          MinimumLength: 8
          RequireLowercase: True
          RequireNumbers: True
          RequireSymbols: False
          RequireUppercase: True

  MasterUserPoolClientneostella:
    Type: AWS::Cognito::UserPoolClient
    Properties:
      AllowedOAuthFlows:
        - code
        - implicit
      AllowedOAuthScopes:
        - email
        - openid
      CallbackURLs:
        - https://www.google.com
      AllowedOAuthFlowsUserPoolClient: True
      ClientName: ${self:service}-${self:provider.stage}-masteruserpoolclient-neostella
      EnableTokenRevocation: True
      ExplicitAuthFlows:
        - ALLOW_CUSTOM_AUTH
        - ALLOW_USER_SRP_AUTH
        - ALLOW_REFRESH_TOKEN_AUTH
      GenerateSecret: False
      PreventUserExistenceErrors: ENABLED
      SupportedIdentityProviders:
        - COGNITO
      UserPoolId:
        Ref: MasterUserPoolneostella

  MasterIdentityPoolneostella:
    Type: AWS::Cognito::IdentityPool
    Properties:
      AllowClassicFlow: False
      AllowUnauthenticatedIdentities: False
      CognitoIdentityProviders:
        - ClientId:
            Ref: MasterUserPoolClientneostella
          ProviderName:
            Fn::GetAtt: ["MasterUserPoolneostella", "ProviderName"]
          ServerSideTokenCheck: False
      IdentityPoolName: ${self:service}-${self:provider.stage}-masteridentitypool-neostella

  AuthRoleAttachmentneostella:
    Type: AWS::Cognito::IdentityPoolRoleAttachment
    Properties:
      IdentityPoolId:
        Ref: MasterIdentityPoolneostella
      Roles:
        authenticated:
          "Fn::GetAtt": [CognitoAuthRoleneostella, Arn]
        unauthenticated:
          "Fn::GetAtt": [CognitoUnauthRoleneostella, Arn]

Outputs:
  MasterUserPoolneostella:
    Value:
      Ref: MasterUserPoolneostella
    Export:
      Name: ${self:service}-${self:provider.stage}-MasterUserPoolneostella

  MasterUserPoolClientneostella:
    Value:
      Ref: MasterUserPoolClientneostella
    Export:
      Name: ${self:service}-${self:provider.stage}-MasterUserPoolClientneostella

  MasterIdentityPoolneostella:
    Value:
      Ref: MasterIdentityPoolneostella
    Export:
      Name: ${self:service}-${self:provider.stage}-MasterIdentityPoolneostella